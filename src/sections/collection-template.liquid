{%- capture contentForQuerystring -%}{{ content_for_header }}{%- endcapture -%}
{%- assign pageUrl = contentForQuerystring | split:'"pageurl":"' | last | split:'"' | first | split:'.myshopify.com' | last | replace:'\/','/' | replace:'%20',' ' | replace:'\u0026','&' -%}

{%- assign url = pageUrl | split: 'collections/' -%}

{% case section.settings.grid %}
  {% when '2' %}
    {%- assign max_height = 530 -%}
  {% when '3' %}
    {%- assign max_height = 345 -%}
  {% when '4' %}
    {%- assign max_height = 250 -%}
  {% when '5' %}
    {%- assign max_height = 195 -%}
{% endcase %}

{% if section.settings.layout == 'grid' %}
  {%- assign limit = section.settings.grid | times: section.settings.rows -%}
{% else %}
  {%- assign limit = 16 -%}
{% endif %}

{% assign full_num = collection.all_products_count %}

{% paginate collection.products by limit %}

{% if section.settings.header_enable %}


    {% if collection.image %}
      <div class="collection-header-bg" style="background-image: url({{ collection.image | img_url: '1600x1600' }});">

      </div>
    {% endif %}
{% endif %}

{% include 'breadcrumb' %}

<div data-section-id="{{ section.id }}" data-section-type="collection-template">
  <div class="collection-header">
    {% comment %} <div class="page-width-collection-header"> {% endcomment %}
      <div class="page-width page-width-max">

      {% if section.settings.header_txt_enable %}
        <div class="section-header">
          <h1 class="main-txt-title">{{ collection.title }}</h1>
          {% comment %}{{ collection.description }}{% endcomment %}
          {% if collection.handle == 'no-bull' %} 
              {% if collection.description != blank %}
                  <p class="short-desc collection-content-bg unapplied-iframe">
                    {{ collection.description }}
                  </p>

              {% endif %}
           {% endif %}
        </div>

      {% endif %}

      {% if section.settings.sort_enable %}
      <div class="filters-toolbar__item text-right">
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        <label for="SortBy" class="label--hidden">{{ 'collections.sorting.title' | t }}</label>
        <select name="SortBy" id="SortBy" class="filters-toolbar__input filters-toolbar__input--sort hidden SortBy">
          {% if sort_by == collection.default_sort_by %}
          <option value="title-ascending" selected="selected">{{ 'collections.sorting.title' | t }}</option>
          {% if collection.default_sort_by != 'manual' %}
          <option value="manual"{% if sort_by == "manual" %} selected="selected"{% endif %}>{{ 'collections.sorting.featured' | t }}</option>
          {% endif %}
          {% if collection.default_sort_by != 'best-selling' %}
          <option value="best-selling"{% if sort_by == "best-selling" %} selected="selected"{% endif %}>{{ 'collections.sorting.best_selling' | t }}</option>
          {% endif %}
          {% if collection.default_sort_by != 'title-ascending' %}
          <option value="title-ascending"{% if sort_by == "title-ascending"  %}selected="selected"{% endif %}>{{ 'collections.sorting.az' | t }}</option>
          {% endif %}
          {% if collection.default_sort_by != 'title-descending' %}
          <option value="title-descending"{% if sort_by == "title-descending" %} selected="selected"{% endif %}>{{ 'collections.sorting.za' | t }}</option>
          {% endif %}
          {% if collection.default_sort_by != 'price-ascending' %}
          <option value="price-ascending"{% if sort_by == "price-ascending" %} selected="selected"{% endif %}>{{ 'collections.sorting.price_ascending' | t }}</option>
          {% endif %}
          {% if collection.default_sort_by != 'price-descending' %}
          <option value="price-descending"{% if sort_by == "price-descending" %} selected="selected"{% endif %}>{{ 'collections.sorting.price_descending' | t }}</option>
          {% endif %}
          {% if collection.default_sort_by != 'created-descending' %}
          <option value="created-descending"{% if sort_by == "created-descending" %} selected="selected"{% endif %}>{{ 'collections.sorting.date_descending' | t }}</option>
          {% endif %}
          {% if collection.default_sort_by != 'created-ascending' %}
          <option value="created-ascending"{% if sort_by == "created-ascending" %} selected="selected"{% endif %}>{{ 'collections.sorting.date_ascending' | t }}</option>
          {% endif %}
          {% else %}
          <option value="manual"{% if sort_by == "manual" %} selected="selected"{% endif %}>{{ 'collections.sorting.featured' | t }}</option>
          <option value="best-selling"{% if sort_by == "best-selling" %} selected="selected"{% endif %}>{{ 'collections.sorting.best_selling' | t }}</option>
          <option value="title-ascending"{% if sort_by == "title-ascending"  %}selected="selected"{% endif %}>{{ 'collections.sorting.az' | t }}</option>
          <option value="title-descending"{% if sort_by == "title-descending" %} selected="selected"{% endif %}>{{ 'collections.sorting.za' | t }}</option>
          <option value="price-ascending"{% if sort_by == "price-ascending" %} selected="selected"{% endif %}>{{ 'collections.sorting.price_ascending' | t }}</option>
          <option value="price-descending"{% if sort_by == "price-descending" %} selected="selected"{% endif %}>{{ 'collections.sorting.price_descending' | t }}</option>
          <option value="created-descending"{% if sort_by == "created-descending" %} selected="selected"{% endif %}>{{ 'collections.sorting.date_descending' | t }}</option>
          <option value="created-ascending"{% if sort_by == "created-ascending" %} selected="selected"{% endif %}>{{ 'collections.sorting.date_ascending' | t }}</option>
          {% endif %}
        </select>
        <input id="DefaultSortBy" type="hidden" value="{{ collection.default_sort_by }}">
      </div>
      {% endif %}

      {% comment %}{% if section.settings.header_txt_enable %}
        {% if collection.description contains '<iframe' %}
          {% assign con = collection.description | split: '<iframe' | last | split: '</frame>' | first %}
          <div class="collection-content-bg">
            <iframe {{ con }}</iframe>
          </div>
        {% elsif collection.description contains '<img' %}
          {% assign con = collection.description | split: '<img' | last | split: '>' | first %}
          <div class="collection-content-bg">
            <img {{ con }}>
          </div>
        {% endif %}
        {% endif %}
      {% endcomment %}


    </div>
  </div>
  <div class="collection-ctn">
    <div class="page-width page-width-max" id="Collection">
      {% if section.settings.layout == 'grid' %}
        {% case section.settings.grid %}
        {% when '2' %}
          {%- assign grid_item_width = 'medium-up--one-half' -%}
        {% when '3' %}
          {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
        {% when '4' %}
          {%- assign grid_item_width = 'small--one-half medium-up--one-quarter' -%}
        {% when '5' %}
          {%- assign grid_item_width = 'small--one-half medium-up--one-fifth' -%}
        {% endcase %}
      <div class="cln-cf-grid">
        <div id="gf-grid" class="collection-ctn">
          <div class="gf-sort-wrap gf-tree gf-sort-desktop">{% include 'filter-menu' %}</div>
          <div class="gf-sort-wrap gf-tree gf-sort-mobile"><div class="filter--title">Filter by</div></div>
          <div class="gf-sort-mob-tree"><div class="sort-title">Sort by</div></div>
          <div id="gf-products" class="grid grid--uniform{% if collection.products_count > 0 %} grid--view-items{% endif %}">
            {% assign index = 0 %}
            {% for product in collection.products %}
              {% include 'globofilter-product-grid' %}
            {% endfor %}
            {% if paginate.next %}
                <div id="more"><p><a href="{{ paginate.next.url }}"></a></p></div>
            {% endif %}
          </div>
          <div style="display: none; text-align: center;" id="loading"><img width="50" height="50" src="https://cdn.shopify.com/s/files/1/0226/0165/files/loading.gif?9191023381512062911" /></div>
        </div>
      </div>
      {% else %}

	<div id="gf-grid">
          <div class="gf-sort-wrap">{% include 'globofilter_sort' %}</div><div id="gf-products" class="list-view-items">
            {% for product in collection.products %}{% include 'globofilter-product-grid' %}{% endfor %}
          </div>
          <div id="gf_pagination_wrap">
            {% include 'globofilter_pagination' %}</div>
          </div>
      {% endif %}

      {% if is_empty_collection %}
        <div class="grid__item small--text-center">
          <p class="text-center">{{ 'collections.general.no_matches' | t }}</p>
        </div>
      {% endif %}

      {% if false and paginate.pages > 1 %}

      {% endif %}
    </div>
  </div>
  <div class="clear"></div>
</div>
{% include 'slider-cart-custom' %}
{% endpaginate %}
  
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
 <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<style type="text/css">
.load_gif{cursor:pointer; text-transform:uppercase; letter-spacing:2px; margin:30px auto 50px !important; width:150px; color:#333; background-color:rgba(241,241,241,1); padding:10px; height:auto; position:relative; display:block; clear:both; text-align:center; transition:background 200ms, color 200ms, border 200ms;
  -moz-transition:background 200ms, color 200ms, border 200ms; -webkit-transition:background 200ms, color 200ms, border 200ms; -ms-transition:background 200ms, color 200ms, border 200ms;
}
.load_gif::before{
  content: '';
  display: block;
  position: absolute;
  top: 4px;
  bottom: 4px;
  left: 4px;
  right: 4px;
  border: 1px solid transparent;
  -webkit-animation: buttonLoader 1400ms infinite linear;
  -moz-animation: buttonLoader 1400ms infinite linear;
  -ms-animation: buttonLoader 1400ms infinite linear;
  animation: buttonLoader 1400ms infinite linear;
}
#more{
  clear:both;
}
</style>
<style type="text/css">
     .filter-menu.sticky {
       float: none;
       position: fixed;
       top: 180px;
       z-index: 1;
       left: auto;
       overflow-y: auto !important;
       max-height: calc(100vh - 200px);
       padding-right: 20px;
       background-color: #fff;
       opacity: 0;
     }
     .filter-menu.sticky::-webkit-scrollbar {
       width: 2px;
     }
     .filter-menu.sticky::-webkit-scrollbar-track {
       background: #f1f1f1;
     }
     .filter-menu.sticky::-webkit-scrollbar-thumb {
       background: #888;
       border-radius: 5px;
     }
     .filter-menu.sticky::-webkit-scrollbar-thumb:hover {
       background: #555;
       border-radius: 5px;
     }
     @media only screen and (max-width: 768px) {
      .main-collection-template #gf-grid #gf-products {
        margin-top: 20px;
      }
     }

 </style>
<script>
  function ScrollExecute() {
     //if($(document).height() - 10000 < ($(document).scrollTop() + $(window).height())) {
          scrollNode = $('#more').last();
          scrollURL = $('#more p a').last().attr("href");    	  
          if(scrollNode.length > 0 && scrollNode.css('display') != 'none') {
            $('#loading').show();
            $.ajax({
              type: 'GET',
              url: scrollURL,
              beforeSend: function() {
                scrollNode.hide();
              },
              success: function(data) {
                scrollNode.remove();
                var filteredData = $(data).find("#gf-products").html();
                $("#gf-products").append(filteredData)
                scrollNode.show();

                filterSticky();
                //load_collection();
                $('#loading').hide();

              },
              dataType: "html"
            });
          }
     //}
   }

  function LoadMoreProducts(){
    scrollNode = $('#more').last();
    scrollURL = $('#more p a').last().attr("href");
    $('#loading').show();
    $.ajax({
      type: 'GET',
      url: scrollURL,
      beforeSend: function() {
        scrollNode.hide();
      },
      success: function(data) {
        // remove loading feedback
        scrollNode.remove();
        var filteredData = $(data).find("#gf-products").html();
        $("#gf-products").append(filteredData)
        scrollNode.show();
		$('#loading').hide();
        //load_collection();
      },
      dataType: "html"
    });
  }

   $(document).ready(function () {
     //LoadMoreProducts();
     $(window).scroll(function(){
         ScrollExecute();
         filterSticky();
     });
   });


  $(document).ready(function(){
    //change selectbox 
	//$(".SortBy").selectmenu().addClass( "filters-toolbar__input filters-toolbar__input--sort" );;
    
    $(".read-more-btn span").click(function(){
      var $par = $(this).parent();
      var name = $(this).attr("attr");

      $par.hide();
      $("." + name).show();
    });

    var num_page = {{ limit }};
    var num_max = {{ full_num }};
     var cur_step = 1;
    var mod = Math.ceil(num_max / num_page);

    $(".section-header .read-more span").click(function(){
      var $par = $(this).parent();
      $par.hide();
      $(".second-desc").show();
      $(".less-more").show();
    });

    $(".section-header .less-more span").click(function(){
      var $par = $(this).parent();
      $par.hide();
      $(".second-desc").hide();
      $(".read-more").show();
    });
  });

  $(window).load(function() {
    filterSticky();

    jQuery(window).resize(function(){
      var menuSelector = '.gf-sort-desktop .filter-menu';
      var width = $(menuSelector).width();
      if($(this).width() <= 767){
        $(menuSelector).width(width).addClass('sticky').css('opacity',1);
      }
      filterSticky();
    });
  })

  function filterSticky() {
    if($(window).width() > 767){
      var scroll = $(document).scrollTop() + 200,
          footerTop = $('#shopify-section-newsletter-section').offset().top,
          heightLimit = footerTop - scroll - 90;
          wHeight = $(window).height();
          minHeight = $('#Collection .grid__item:first-child').offset().top + 65,
          maxHeight = footerTop - 200,
          widthFilter = $('.gf-sort-desktop').width();

      var menuSelector = '.gf-sort-desktop .filter-menu';

      $(menuSelector).css('opacity', 0);

      //console.log('--'+scroll+'---'+maxHeight+'----'+heightLimit);

      if(scroll > maxHeight){
        $(menuSelector).css('opacity',0).removeClass('sticky').removeAttr('style');
      } else if (scroll < minHeight){
        $(menuSelector).removeClass('sticky').removeAttr('style');
      }else{
        $(menuSelector).css('height', heightLimit ).addClass('sticky').css('opacity',1).width(widthFilter);
      }
    }
  }
</script>


{% schema %}
  {
    "name": "Collection pages",
  "class": "main-collection-template",
    "settings": [
      {
        "type": "select",
        "id": "layout",
        "label": "Layout",
        "default": "grid",
        "options": [
          {
            "value": "grid",
            "label": "Grid"
          },
          {
            "value": "list",
            "label": "List"
          }
        ]
      },
      {
        "type": "select",
        "id": "grid",
        "label": "Products per row (grid only)",
        "default": "4",
        "options": [
          {
            "value": "2",
            "label": "2"
          },
          {
            "value": "3",
            "label": "3"
          },
          {
            "value": "4",
            "label": "4"
          },
          {
            "value": "5",
            "label": "5"
          }
        ]
      },
      {
        "type": "select",
        "id": "rows",
        "label": "Rows per page (grid only)",
        "default": "2",
        "options": [
          {
            "value": "2",
            "label": "2"
          },
          {
            "value": "3",
            "label": "3"
          },
          {
            "value": "4",
            "label": "4"
          },
          {
            "value": "5",
            "label": "5"
          },
          {
            "value": "6",
            "label": "6"
          },
          {
            "value": "7",
            "label": "7"
          },
          {
            "value": "8",
            "label": "8"
          },
		   {
            "value": "9",
            "label": "9"
          },
		  {
            "value": "10",
            "label": "10"
          },
          {
            "value": "15",
            "label": "15"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "show_collection_image",
        "label": "Show collection image",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_vendor",
        "label": "Show product vendors",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "sort_enable",
        "label": "Enable sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "tags_enable",
        "label": "Enable tag filtering",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "header_enable",
        "label": "Enable header section",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "header_txt_enable",
        "label": "Enable header content",
        "default": true
      },
      {
        "type": "text",
        "id": "filter_main_title",
        "label": "Filter title"
      }
    ],
    "blocks": [
      {
        "type": "filter_color",
        "name": "Filter Color",
        "settings": [
      {
          "type": "checkbox",
          "id": "enable",
          "label": "Enable",
          "default": true
          },
          {
            "type": "text",
            "id": "title",
            "label": "Filter Title"
          },
          {
            "type": "text",
            "id": "list_color_name1",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color1",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name2",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color2",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name3",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color3",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name4",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color4",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name5",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color5",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name6",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color6",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name7",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color7",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name8",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color8",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name9",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color9",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name10",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color10",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name11",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color11",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name12",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color12",
            "label": "Select color"
          },
          {
            "type": "text",
            "id": "list_color_name13",
            "label": "Color name"
          },
          {
            "type": "color",
            "id": "list_color13",
            "label": "Select color"
          }
        ]
      },
      {
        "type": "filter_price",
        "name": "Filter Price",
        "settings": [
      {
          "type": "checkbox",
          "id": "enable",
          "label": "Enable",
          "default": true
          },
          {
            "type": "text",
            "id": "title",
            "label": "Filter Title"
          },
          {
            "type": "textarea",
            "id": "list_tags",
            "label": "Tag lists"
          }
        ]
      },
    {
        "type": "filter_brand",
        "name": "Filter Brand",
        "settings": [
      {
          "type": "checkbox",
          "id": "enable",
          "label": "Enable",
          "default": true
          },
          {
            "type": "text",
            "id": "title",
            "label": "Filter Title"
          },
          {
            "type": "textarea",
            "id": "list_tags",
            "label": "List Tags",
            "info": "Separate by a comma, i.e \"Dincidunteros, Nectellus, Solutmades\"."
          }
        ]
      },
      {
        "type": "filter_collection",
        "name": "Filter Collection",
        "settings": [
      {
          "type": "checkbox",
          "id": "enable",
          "label": "Enable",
          "default": true
          },
          {
            "type": "text",
            "id": "title",
            "label": "Filter Title"
          },
          {
            "type": "link_list",
            "id": "category_menu",
            "label": "Category List"
          }
        ]
      },
      {
        "type": "filter_size",
        "name": "Filter Size",
        "settings": [
      {
          "type": "checkbox",
          "id": "enable",
          "label": "Enable",
          "default": true
          },
          {
            "type": "text",
            "id": "title",
            "label": "Filter Title"
          },
          {
            "type": "textarea",
            "id": "list_tags",
            "label": "List Tags",
            "info": "Separate by a comma, i.e \"Dincidunteros, Nectellus, Solutmades\"."
          }
        ]
      },
      {
        "type": "filter_rate",
        "name": "Filter Rate",
        "settings": [
      {
          "type": "checkbox",
          "id": "enable",
          "label": "Enable",
          "default": true
          },
          {
            "type": "text",
            "id": "title",
            "label": "Filter Rate"
          }
        ]
      }
    ]
  }
{% endschema %}
