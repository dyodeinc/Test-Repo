{% if settings.countdown_enable %}
  <div class="section page desk_timer">
   <div class="countdown">
    <div class="page-width">
      <div class="counttp">
        <div class="coutwrap-main">
          <div class="counter">

            <div class="custom-countdown" data-time="{{ settings.datetime }}" data-current-time="{{'now' | date: '%H:%M:%S' }}">

              <div class="countdown-container" id="custom-countdown">
              </div>
            </div>
            {% if settings.cd_text != blank %}
              <h1>{{ settings.cd_text }}</h1>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
   </div>
  </div>
{% endif %}

<style>
  .countdown .counter h1 {
    color: {{ settings.text_color }};
  }
  .merged-page-template .counter {
    background-color: {{ settings.bgcd_color }};
  }
</style>

<script type="text/template" id="custom-countdown-template">
  <div class="time <%= label %>">
    <span class="count curr top"><%= curr %></span>
    <span class="count next top"><%= next %></span>
    <span class="count next bottom"><%= next %></span>
    <span class="count curr bottom"><%= curr %></span>
    <span class="label"><%= label.length < 6 ? label : label.substr(0, 3)  %></span>
  </div>
</script>

<div id="clock"></div>

<script>
_u = _.noConflict(); // lets call ourselves _u
</script>
<script type="text/javascript">

  $(window).on('load', function() {
	var endDate = moment.tz("{{ settings.datetime }}", "Australia/Adelaide"),
     	labels = ['days', 'hours', 'minutes', 'seconds'],
        template = _u.template($('#custom-countdown-template').html()),
        currDate = '00:00:00:00',
        nextDate = '00:00:00:00',
        parser = /([0-9]{2})/gi,
        $example = $('#custom-countdown');
    // Parse countdown string to an object
    function strfobj(str) {
      var parsed = str.match(parser),
        obj = {};
      labels.forEach(function(label, i) {
        obj[label] = parsed[i]
      });
      return obj;
    }
    // Return the time components that diffs
    function diff(obj1, obj2) {
      var diff = [];
      labels.forEach(function(key) {
        if (obj1[key] !== obj2[key]) {
          diff.push(key);
        }
      });
      return diff;
    }
    // Build the layout
    var initData = strfobj(currDate);
    labels.forEach(function(label, i) {
      $example.append(template({
        curr: initData[label],
        next: initData[label],
        label: label
      }));
    });
    // Starts the countdown
    $example.countdown(endDate.toDate(), function(event) {


      var newDate = event.strftime('%d:%H:%M:%S'),
        data;

      if (newDate !== nextDate) {
        currDate = nextDate;
        nextDate = newDate;
        // Setup the data
        data = {
          'curr': strfobj(currDate),
          'next': strfobj(nextDate)
        };
        // Apply the new values to each node that changed
        diff(data.curr, data.next).forEach(function(label) {
          var selector = '.%s'.replace(/%s/, label),
              $node = $example.find(selector);
          // Update the node
          $node.removeClass('flip');
          $node.find('.curr').text(data.curr[label]);
          $node.find('.next').text(data.next[label]);
          // Wait for a repaint to then flip
          _u.delay(function($node) {
            $node.addClass('flip');
          }, 50, $node);
        });
      }
    });

    // Set the date start countdown
    var countDownDate = new Date('{{ settings.start_countdown }}').getTime();

    // Update the count down every 1 second
      var x = setInterval(function() {
      var now = new Date().getTime();
      var distance = countDownDate - now;
      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);

      if (distance < 0) {
        clearInterval(x);
        $('.countdown').show();
      }
    }, 1000);

  });

</script>
