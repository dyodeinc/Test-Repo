<script>
/* PRELOADS */
// load jquery if it doesn't exist
if(!window.jQuery){var jqueryScript=document.createElement('script');jqueryScript.setAttribute('src','https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js');document.head.appendChild(jqueryScript);}

__bva__jQueryinterval = setInterval(function(){
// --------------------------------------------- wait for jQuery to load
if(window.jQuery){
// --------------- run script after jQuery has loaded

// search parameters
getURLParams = function(name, url){
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
    results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
  };

/* =====================
| DYNAMIC DEPENDENCIES |
--------------------- */

__bva__ = {
  dynamicCart: true,  // if cart is dynamic (meaning no refresh on cart add) set to true
  debug: false, // if true, console messages will be displayed
  cart: null,
  wishlist: true,
  removeCart: true
};

customBindings = {
  cartTriggers: [],
  viewCart: [],
  removeCartTrigger: [],
  cartVisableSelector: [],
  promoSubscriptionsSelectors: [],
  promoSuccess: [],
  ctaSelectors: [],
  newsletterSelectors: ['.klaviyo_form_actions .button'],
  newsletterSuccess: [],
  searchPage: [],
  wishlistSelector: ['#iWishAdd'],
  removeWishlist: ['.iwishRemoveBtn-ctn'],
  wishlistPage: ['*/apps/iwish'],
  searchTermQuery: [getURLParams('q')], // replace var with correct query
};

/* DO NOT EDIT */
defaultBindings = {
  cartTriggers: ['form[action="/cart/add"] [type="submit"],.add-to-cart,.cart-btn'],
  viewCart: ['form[action="/cart"],.my-cart,.trigger-cart,#mobileCart'],
  removeCartTrigger: ['[href*="/cart/change"]'],
  cartVisableSelector: ['.inlinecart.is-active,.inline-cart.is-active'],
  promoSubscriptionsSelectors: [],
  promoSuccess: [],
  ctaSelectors: [],
  newsletterSelectors: ['input.contact_email'],
  newsletterSuccess: ['.success_message'], // default Klaviyo
  searchPage: ['search'],
  wishlistSelector: [],
  removeWishlist: [],
  wishlistPage: []
};

// stitch bindings
objectArray = customBindings;
outputObject = __bva__;

applyBindings = function(objectArray, outputObject){
  for (var x in objectArray) {
    var key = x;
    var objs = objectArray[x];
    values = [];
    if(objs.length > 0){
      values.push(objs);
      if(key in outputObject){
        values.push(outputObject[key]);
        outputObject[key] = values.join(", ");
      }else{
        outputObject[key] = values.join(", ");
      }
    }
  }
};

applyBindings(customBindings, __bva__);
applyBindings(defaultBindings, __bva__);

/* =======================
| PREREQUISITE LIBRARIES |
----------------------- */

  clearInterval(__bva__jQueryinterval);

    // jquery-cookies.js
    if(typeof $.cookie!==undefined){(function(a){if(typeof define==='function'&&define.amd){define(['jquery'],a)}else if(typeof exports==='object'){module.exports=a(require('jquery'))}else{a(jQuery)}}(function($){var g=/\+/g;function encode(s){return h.raw?s:encodeURIComponent(s)}function decode(s){return h.raw?s:decodeURIComponent(s)}function stringifyCookieValue(a){return encode(h.json?JSON.stringify(a):String(a))}function parseCookieValue(s){if(s.indexOf('"')===0){s=s.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,'\\')}try{s=decodeURIComponent(s.replace(g,' '));return h.json?JSON.parse(s):s}catch(e){}}function read(s,a){var b=h.raw?s:parseCookieValue(s);return $.isFunction(a)?a(b):b}var h=$.cookie=function(a,b,c){if(arguments.length>1&&!$.isFunction(b)){c=$.extend({},h.defaults,c);if(typeof c.expires==='number'){var d=c.expires,t=c.expires=new Date();t.setMilliseconds(t.getMilliseconds()+d*864e+5)}return(document.cookie=[encode(a),'=',stringifyCookieValue(b),c.expires?'; expires='+c.expires.toUTCString():'',c.path?'; path='+c.path:'',c.domain?'; domain='+c.domain:'',c.secure?'; secure':''].join(''))}var e=a?undefined:{},cookies=document.cookie?document.cookie.split('; '):[],i=0,l=cookies.length;for(;i<l;i++){var f=cookies[i].split('='),name=decode(f.shift()),cookie=f.join('=');if(a===name){e=read(cookie,b);break}if(!a&&(cookie=read(cookie))!==undefined){e[name]=cookie}}return e};h.defaults={};$.removeCookie=function(a,b){$.cookie(a,'',$.extend({},b,{expires:-1}));return!$.cookie(a)}}))}

    /* ======================
    | Begin dataLayer Build |
    ---------------------- */

    // if debug
    if(__bva__.debug){
      console.log('=====================\n| DATALAYER SHOPIFY |\n---------------------');
      console.log('Page Template: {{ template }}');
    }

    window.dataLayer = window.dataLayer || [];  // init data layer if doesn't already exist
    dataLayer.push({'event': 'Begin DataLayer'}); // begin datalayer

    var template = "{{template}}";

    /* Landing Page Cookie
    -----------------------
    1. Detect if user just landed on the site
    2. Only fires if Page Title matches website */

    $.cookie.raw = true;
    if ($.cookie('landingPage') === undefined || $.cookie('landingPage').length === 0) {
      var landingPage = true;
      $.cookie('landingPage', unescape);
      $.removeCookie('landingPage', {path: '/'});
      $.cookie('landingPage', 'landed', {path: '/'});
    } else {
      var landingPage = false;
      $.cookie('landingPage', unescape);
      $.removeCookie('landingPage', {path: '/'});
      $.cookie('landingPage', 'refresh', {path: '/'});
    }
    if (__bva__.debug) {
      console.log('Landing Page: ' + landingPage);
    }

    /* Log State Cookie
    ------------------- */
    {% if customer %}
    var isLoggedIn = true;
    {% else %}
    var isLoggedIn = false;
    {% endif %}
    if (!isLoggedIn) {
      $.cookie('logState', unescape);
      $.removeCookie('logState', {path: '/'});
      $.cookie('logState', 'loggedOut', {path: '/'});
    } else {
      if ($.cookie('logState') === 'loggedOut' || $.cookie('logState') === undefined) {
        $.cookie('logState', unescape);
        $.removeCookie('logState', {path: '/'});
        $.cookie('logState', 'firstLog', {path: '/'});
      } else if ($.cookie('logState') === 'firstLog') {
        $.cookie('logState', unescape);
        $.removeCookie('logState', {path: '/'});
        $.cookie('logState', 'refresh', {path: '/'});
      }
    }

    if ($.cookie('logState') === 'firstLog') {
      var firstLog = true;
    } else {
      var firstLog = false;
    }

    /* ==========
    | DATALAYERS |
    ----------- */

    /* DATALAYER: Landing Page
    --------------------------
    Fires any time a user first lands on the site. */

    if ($.cookie('landingPage') === 'landed') {
      dataLayer.push({
        'pageType': 'Landing',
        'event': 'Landing'
      });

      if (__bva__.debug) {
        console.log('DATALAYER: Landing Page fired.');
      }
    }

    /* DATALAYER: Log State
    -----------------------
    1. Determine if user is logged in or not.
    2. Return User specific data. */

    var logState = {
      {% if shop.customer_accounts_enabled %}
      {% if customer %}
      'userId'        : "{{customer.id}}",
      'customerEmail' : "{{customer.email}}",
      'logState'      : "Logged In",
      'customerInfo'  : {
        'firstName'   : "{{customer.first_name}}",
        'lastName'    : "{{customer.last_name}}",
        'address1'    : "{{customer_address.address1}}",
        'address2'    : "{{customer_address.address2}}",
        'street'      : "{{customer.street}}",
        'city'        : "{{customer.city}}",
        'province'    : "{{customer.province}}",
        'zip'         : "{{customer.zip}}",
        'country'     : "{{customer.country}}",
        'phone'       : "{{customer.phone}}",
        'totalOrders' : "{{customer.orders_count}}",
        'totalSpent'  : "{{customer.total_spent| money_without_currency| remove: ","}}",
        'tags'        : "{{customer.tags | join: ', '}}"
      },
      {% else %}
      'logState' : "Logged Out",
      {% endif %}
      {% endif %}
      'firstLog'      : firstLog,
      'customerEmail' : "{{customer.email}}",
      'timestamp'     : Date.now(),
      {% if customer.orders_count > 1 %}
      'customerType'       : 'Returning',
      'customerTypeNumber' : '0',
      {% else %}
      'customerType'       : 'New',
      'customerTypeNumber' :'1',
      {% endif %}
      'shippingInfo' : {
        'fullName'  : "{{checkout.shipping_address.name}}",
        'firstName' : "{{checkout.shipping_address.first_name}}",
        'lastName'  : "{{checkout.shipping_address.last_name}}",
        'address1'  : "{{checkout.shipping_address.address1}}",
        'address2'  : "{{checkout.shipping_address.address2}}",
        'street'    : "{{checkout.shipping_address.street}}",
        'city'      : "{{checkout.shipping_address.city}}",
        'province'  : "{{checkout.shipping_address.province}}",
        'zip'       : "{{checkout.shipping_address.zip}}",
        'country'   : "{{checkout.shipping_address.country}}",
        'phone'     : "{{checkout.shipping_address.phone}}",
      },
      'billingInfo' : {
        'fullName'  : "{{checkout.billing_address.name}}",
        'firstName' : "{{checkout.billing_address.first_name}}",
        'lastName'  : "{{checkout.billing_address.last_name}}",
        'address1'  : "{{checkout.billing_address.address1}}",
        'address2'  : "{{checkout.billing_address.address2}}",
        'street'    : "{{checkout.billing_address.street}}",
        'city'      : "{{checkout.billing_address.city}}",
        'province'  : "{{checkout.billing_address.province}}",
        'zip'       : "{{checkout.billing_address.zip}}",
        'country'   : "{{checkout.billing_address.country}}",
        'phone'     : "{{checkout.billing_address.phone}}",
      },
      'checkoutEmail' : "{{checkout.email}}",
      'currency'      : "{{shop.currency}}",
      'pageType'      : 'Log State',
      'event'         : 'Log State'
    }

    dataLayer.push(logState);
    if(__bva__.debug){
      console.log("Log State"+" :"+JSON.stringify(logState, null, " "));
    }
    {% if template contains 'index' %}
    {% include 'dataLayer-homePage' %}
    {% endif %}


    /* DATALAYER: Blog Articles
    ---------------------------
    Fire on Blog Article Pages */

    {% if template contains 'article' %}
    var blog = {
      'author'      : "{{article.author}}",
      'title'       : "{{article.title}}",
      'dateCreated' : "{{article.created_at}}",
      'pageType'    : 'Blog',
      'event'       : 'Blog'
    };
    dataLayer.push(blog);
    if(__bva__.debug){
      console.log("Blog"+" :"+JSON.stringify(blog, null, " "));
    }
    {% endif %}

    /* DATALAYER: Product List Page (Collections, Category)
    -------------------------------------------------------
    Fire on all product listing pages. */

    {% if template contains 'collection' %}

    var product = {
      'products' : [
      {% for product in collection.products limit:3 %}{
        'id'              : '{{product.id }}',
        'sku'             : "{{product.selected_or_first_available_variant.sku}}",
        'variantId'       : "{{product.selected_or_first_available_variant.id}}",
        'productType'     : "{{product.type}}",
        'handle'          : "{{product.handle}}",
        'name'            : "{{product.title}}",
        'price'           : "{{product.price | money_without_currency | remove: ","}}",
        'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}",
        'productURL'      : "{{shop.secure_url}}{{product.url}}",
        'brand'           : "{{product.vendor}}"
      }{% unless forloop.last %},{% endunless %}
      {% endfor %}]
    };

    var collections = {
      'productList' : "{{collection.title}}",
      'pageType'    : 'Collection',
      'event'       : 'Collection'
    };
    dataLayer.push(product);
    dataLayer.push(collections);
    if(__bva__.debug){
      console.log("Collections"+" :"+JSON.stringify(collections, null, " "));
    }

    /* Viewport script */

    $(document).ready(function () {
      var percentVisibleToFireEvent = 90; // The percentage of visibility allowed to send an event
      var sendItems = [];
      var sentItems = [];
      var scrollTimeout;
      var initial = true;
      var debug = false;

      $(document).scroll(function () {
        if (initial === false) {
          clearTimeout(scrollTimeout);
          detectVisible();
          scrollTimeout = setTimeout(doneScroll, 700);

          if (debug) console.log('scroll');
        } else {
          initial = false;
          if (debug) console.log('done load');
          detectVisible();
          doneScroll();
        }
      });

      function getProduct(id) { //get data fromn data-attributes - replace with custom class
        if (debug) console.log('.product-item-view[data-item-id="'+id+'"]');
        var productId = $('.product-item-view[data-item-id="'+id+'"]').data("item-id");
        var productPrice = $('.product-item-view[data-item-id="'+id+'"]').data("item-price");
        var productName = $('.product-item-view[data-item-id="'+id+'"]').data("item-name");
        var productType = $('.product-item-view[data-item-id="'+id+'"]').data("item-type");
        var productPosition = $('.product-item-view[data-item-id="'+id+'"]').data("item-position");
        var productBrand = $('.product-item-view[data-item-id="'+id+'"]').data("item-brand");

        var tempProduct = {
          'id': productId,
          'name': productName,
          'category' : productType,
          'price': productPrice,
          'position': productPosition,
          'brand': productBrand,
          'list' : "Collection - {{collection.title}}"
        };

        if (debug) console.log(productId , productName , productPrice , productPosition , productBrand);
        return tempProduct;
      }

      function doneScroll() {
        if (debug) console.log('done scroll');
        if (debug) console.log('Ids to be sent: ' + sendItems.join(','));
        if (debug) console.log('Ids already sent: ' + sentItems.join(','));

        var counter = 0;

        while (sendItems.length > 0) {
          counter++;
          //Get the product id we need to send and take it out of the items needed to be sent
          var productId = sendItems.pop();
          var productToPush = getProduct(productId);

          if(productToPush === undefined)
            continue;
          if (debug) console.log(productToPush);

          dataLayer.push({
            'event': 'productsImpression',
            'ecommerce':{
              'impressions':[productToPush]
            }
          });

          //Add the product id to the list of ids already sent so we don't send duplicates
          sentItems.push(productId);
        }

        clearTimeout(scrollTimeout);
      }

      /*function detectVisible() {
        var winHeight = $(window).height();
        var winOffset = $(document).scrollTop();

        var minY = winOffset;
        var maxY = winOffset + winHeight;

        $('.product-item-view').each(function () { //to replace with the correct class
          var visible = false;
          var itemTop = $(this).offset().top;
          var itemBottom = itemTop + $(this).height();
          var divId = $(this).data('item-id');

          if (debug) console.log('min: ' + minY + ' max: ' + maxY + ' top: ' + itemTop);
          if ((itemTop >= minY && itemTop < maxY) || (itemBottom >= minY && itemBottom < maxY)) {
            if (sentItems.indexOf(divId) === -1 && sendItems.indexOf(divId) === -1) {
              sendItems.push(divId);
            }
          }
        });

        if (debug) console.log(sendItems);
      }*/

      function detectVisible() {
      $('.product-item-view').each(function () { //to replace with the correct class
        var divId = $(this).data('item-id');

        if (calculateVisibilityPercent($(this)) >= percentVisibleToFireEvent && $(this).is(':visible')) {
          if (sentItems.indexOf(divId) === -1 && sendItems.indexOf(divId) === -1) {
            console.log(divId)
            sendItems.push(divId);
          }
        }
      });

      if (debug) console.log(sendItems);
      doneScroll();
      }


      detectVisible();

      /* Product Clicks  */
      $( "body" ).delegate( ".product-item-view .product-item-img , .product-item-view .bnt-view-product", "click", function() { // add btn-view-product
        if(debug) console.log('Click on product');

          currentProductId = $(this).parents('.product-item-view').data('item-id');
          currentProduct = getProduct(currentProductId);

          dataLayer.push({
            'event': 'productClick',
            'ecommerce':{
              'click' : {
              'actionField': { 'list': "Collection - {{collection.title}}"},
              'products':[currentProduct]
              },

            }
          });

      });

      function calculateVisibilityPercent(div$) {
        var windowHeight = $(window).height(),
        docScroll = $(document).scrollTop(),
        divPosition = div$.offset().top,
        divHeight = div$.height(),
        hiddenBefore = docScroll - divPosition,
        hiddenAfter = (divPosition + divHeight) - (docScroll + windowHeight);

        if ((docScroll > divPosition + divHeight) || (divPosition > docScroll + windowHeight)) {
          return 0;
        } else {
          var result = 100;
          if (hiddenBefore > 0)
            result -= (hiddenBefore * 100) / divHeight;
          if (hiddenAfter > 0)
            result -= (hiddenAfter * 100) / divHeight;
          return result;
        }
      }

    });

    {% endif %}

    /* DATALAYER: Product Page
    --------------------------
    Fire on all Product View pages. */

    {% if template contains 'product' %}

      sku = '';
      var product = {
        'products': [{
          'id'              : "{{product.id}}",
          'sku'             : "{{product.selected_or_first_available_variant.sku}}",
          'variantId'       : "{{product.selected_or_first_available_variant.id}}",
          'productType'     : "{{product.type}}",
          'handle'          : "{{product.handle}}",
          'name'            : "{{product.title}}",
          'price'           : "{{product.price | money_without_currency | remove: ","}}",
          'description'     : "{{product.description | strip_newlines | strip_html | escape }}",
          'imageURL'        : "https:{{product.featured_image.src|img_url:'grande'}}",
          'productURL'      : "{{shop.secure_url}}{{product.url}}",
          'brand'           : "{{product.vendor}}",
          'availability'    : {% if product.available %}"InStock"{% else %}"OutOfStock"{% endif %},
          {% if product.metafields.yotpo.reviews_count and product.metafields.yotpo.reviews_count != "0" %}
          'ratingValue'     : "{{ product.metafields.yotpo.reviews_average }}",
          'reviewCount'     : "{{ product.metafields.yotpo.reviews_count }}",
          {% endif %}
          'comparePrice'    : "{{product.compare_at_price_max|money_without_currency}}",
          'categories'      : {{product.collections|map:"title"|json}},
          'currentCategory' : "{{collection.title}}",
          'productOptions'  : {
          {% for option in product.options_with_values %}
          {% if option.name != 'Title' %}
          "{{ option.name | capitalize }}"  : [{% for value in option.values %} {{ value | capitalize | json }} {% unless forloop.last %},{% endunless %} {% endfor %}],
          {% endif %}
          {% endfor %}

          }
        }]
      };

      function productView(){
        var sku = "{{ product.selected_or_first_available_variant.sku }}";
        dataLayer.push(product, {
          'pageType' : 'Product',
          'event'    : 'Product'});
        if(__bva__.debug){
          console.log("Product"+" :"+JSON.stringify(product, null, " "));
        }
      }
      productView();

      $(__bva__.cartTriggers).click(function(){
        var skumatch = "{{ product.selected_or_first_available_variant.sku }}";
        if(sku != skumatch){
          productView();
        }
      });

    {% endif %}

    /* DATALAYER: Cart View
    -----------------------
    1. Fire anytime a user views their cart (non-dynamic) */

    {% if template contains 'cart' %}
    var cart = {
      'products':[{% for line_item in cart.items %}{
        'id'       : "{{line_item.product_id}}",
        'sku'      : "{{line_item.sku}}",
        'variant'  : "{{line_item.variant_id}}",
        'productType'     : "{{line_item.product.type}}",
        'handle'   : "{{line_item.product.handle}}",
        'name'     : "{{line_item.title}}",
        'price'    : "{{line_item.price | money_without_currency}}",
        'quantity' : "{{line_item.quantity}}"
      }{% unless forloop.last %},{% endunless %}{% endfor %}],
      'cartValue': "{{ cart.total_price | money_without_currency }}",
      'cartWeight': "{{ cart.total_weight }}",
      'pageType' : 'Cart',
      'event'    : 'Cart'

    };

    dataLayer.push(cart);
    if(__bva__.debug){
      console.log("Cart"+" :"+JSON.stringify(cart, null, " "));
    }

    __bva__.cart = cart.products;
    $(__bva__.removeCartTrigger).on('click', function (event) {

    setTimeout(function(){
    // ------------------------------------------------------------------- remove from cart

      jQuery.getJSON("/cart", function (response) {
      // --------------------------------------------- get Json response

        __bva__.removeCart = response;
        var removeFromCart = {
          'products': __bva__.removeCart.items.map(function (line_item) {
            return {
              'id'       : line_item.product_id,
              'sku'      : line_item.sku,
              'variant'  : line_item.variant_id,
              'name'     : line_item.title,
              'price'    : (line_item.price/100),
              'quantity' : line_item.quantity
            }
          }),
          'pageType' : 'Remove from Cart',
          'event'    : 'Remove from Cart'
        };
        __bva__.removeCart = removeFromCart;
        var cartIDs = [];
        var removeIDs = [];
        var removeCart = [];

        // remove from cart logic
        for(var i=__bva__.cart.length-1;i>=0;i--){var x=parseFloat(__bva__.cart[i].variant);cartIDs.push(x)}for(var i=__bva__.removeCart.products.length-1;i>=0;i--){var x=parseFloat(__bva__.removeCart.products[i].variant);removeIDs.push(x)}function arr_diff(b,c){var a=[],diff=[];for(var i=0;i<b.length;i++){a[b[i]]=true}for(var i=0;i<c.length;i++){if(a[c[i]]){delete a[c[i]]}else{a[c[i]]=true}}for(var k in a){diff.push(k)}return diff};var x=arr_diff(cartIDs,removeIDs)[0];for(var i=__bva__.cart.length-1;i>=0;i--){if(__bva__.cart[i].variant==x){removeCart.push(__bva__.cart[i])}}

        dataLayer.push(removeCart);
        if (__bva__.debug) {
          console.log("Cart"+" :"+JSON.stringify(removeCart, null, " "));
        }

      // --------------------------------------------- get Json response
      });

    // ------------------------------------------------------------------- remove from cart
    }, 2000);

    });

    {% endif %}


    /* DATALAYER: All Pages
    -----------------------
    Fire all pages trigger after all additional dataLayers have loaded. */

    dataLayer.push({
      'event': 'DataLayer Loaded'
    });

    console.log('DATALAYER: DataLayer Loaded.');

    /*==========================
    | dataLayer Event Bindings |
    --------------------------*/

    /* DATALAYER: Add to Cart / Dynamic Cart View
    ---------------------------------------------
    Fire all pages trigger after all additional dataLayers have loaded. */

    $(document).ready(function() {

      /* DATALAYER: Search Results
      --------------------------- */

      var searchPage = new RegExp(__bva__.searchPage, "g");
      if(document.location.pathname.match(searchPage)){
        var search = {
          'searchTerm' : __bva__.searchTermQuery,
          'pageType'   : "Search",
          'event'      : "Search"
        };

        dataLayer.push(search);
        if(__bva__.debug){
          console.log("Search"+" :"+JSON.stringify(search, null, " "));
        }
      }

      /* DATALAYER: Cart
      ------------------- */

      /* STAGE CART DATA */
      function mapJSONcartData(){
        jQuery.getJSON('/cart.js', function (response) {
        // --------------------------------------------- get Json response
          __bva__.cart = response;
          var cart = {
            'products': __bva__.cart.items.map(function (line_item) {
              return {
                'id'       : line_item.id,
                'sku'      : line_item.sku,
                'variant'  : line_item.variant_id,
                'name'     : line_item.title,
                'price'    : (line_item.price/100),
                'quantity' : line_item.quantity
              }
              }),
            'pageType' : 'Cart',
            'event'    : 'Cart'
          };
          if(cart.products.length > 0){
            dataLayer.push(cart);
            if (__bva__.debug) {
              console.log("Cart"+" :"+JSON.stringify(cart, null, " "));
            }
          }
        // --------------------------------------------- get Json response
        });
      }

      viewcartfire = 0;

      /* VIEW CART */
      $(__bva__.viewCart).on('click', function (event) {
      // ------------------------------------------------------------------------- view cart

        if(viewcartfire !== 1){

        viewcartfire = 1;
        // IF DYNAMIC CART IS TRUE
        if (__bva__.dynamicCart) {
        // ---------------------------------- if dynamic cart is true
        cartCheck = setInterval(function () {
        // -------------------------------------- begin check interval
          if ($(__bva__.cartVisableSelector).length > 0) {
          // ------------------------------------------------------------------ check visible selectors
            clearInterval(cartCheck);
            mapJSONcartData();
            // ------------------------------------------------------------------ check visible selectors
            $(__bva__.removeCartTrigger).on('click', function (event) {
            // ------------------------------------------------------------------- remove from cart
              var link = $(this).attr("href");
              jQuery.getJSON(link, function (response) {
              // --------------------------------------------- get Json response
                __bva__.removeCart = response;
                var removeFromCart = {
                  'products': __bva__.removeCart.items.map(function (line_item) {
                    return {
                      'id'       : line_item.id,
                      'sku'      : line_item.sku,
                      'variant'  : line_item.variant_id,
                      'name'     : line_item.title,
                      'price'    : (line_item.price/100),
                      'quantity' : line_item.quantity
                    }
                  }),
                    'pageType' : 'Remove from Cart',
                    'event'    : 'Remove from Cart'
                  };
                dataLayer.push(removeFromCart);
                if (__bva__.debug) {
                  console.log("Cart"+" :"+JSON.stringify(removeFromCart, null, " "));
                }
              // --------------------------------------------- get Json response
              });
            // ------------------------------------------------------------------- remove from cart
            });
            }
          // -------------------------------------- begin check interval
          }, 500);
        // ---------------------------------- if dynamic cart is true
        }
      }
      // ------------------------------------------------------------------------- view cart
      });

      /* ADD TO CART */
      jQuery.getJSON('/cart.js', function (response) {
      // --------------------------------------------- get Json response
        __bva__.cart = response;
        var cart = {
          'products': __bva__.cart.items.map(function (line_item) {
            return {
              'id'       : line_item.id,
              'sku'      : line_item.sku,
              'variant'  : line_item.variant_id,
              'name'     : line_item.title,
              'price'    : (line_item.price/100),
              'quantity' : line_item.quantity
            }
          })
        }
      // --------------------------------------------- get Json response
      __bva__.cart = cart;
      collection_cartIDs = [];
      collection_matchIDs = [];
      collection_addtocart = [];
      for (var i = __bva__.cart.products.length - 1; i >= 0; i--) {
          var x = parseFloat(__bva__.cart.products[i].variant);
          collection_cartIDs.push(x);
      }
      });

      function __bva__addtocart(){
        {% if template contains 'collection' %}

        setTimeout(function(){
          jQuery.getJSON('/cart.js', function (response) {
            // --------------------------------------------- get Json response
            __bva__.cart = response;
            var cart = {
              'products': __bva__.cart.items.map(function (line_item) {
                return {
                  'id'       : line_item.id,
                  'sku'      : line_item.sku,
                  'variant'  : line_item.variant_id,
                  'name'     : line_item.title,
                  'price'    : (line_item.price/100),
                  'quantity' : line_item.quantity
                }
              })
            }
            __bva__.cart = cart;
            for (var i = __bva__.cart.products.length - 1; i >= 0; i--) {
              var x = parseFloat(__bva__.cart.products[i].variant);
              collection_matchIDs.push(x);
            }
            function arr_diff(b, c) {
              var a = [],
              diff = [];
              for (var i = 0; i < b.length; i++) {
                a[b[i]] = true
              }
              for (var i = 0; i < c.length; i++) {
                if (a[c[i]]) {
                  delete a[c[i]]
                } else {
                  a[c[i]] = true
                }
              }
              for (var k in a) {
                diff.push(k)
              }
              return diff
            };
            var x = arr_diff(collection_cartIDs, collection_matchIDs).pop();
            console.log(x);
            for (var i = __bva__.cart.products.length - 1; i >= 0; i--) {
              if (__bva__.cart.products[i].variant.toString() === x) {
                product = {'products':[__bva__.cart.products[i]]};
                dataLayer.push({'products':product});
                dataLayer.push(product);
                dataLayer.push({
                  'pageType' : 'Add to Cart',
                  'event'    : 'Add to Cart'
                });
                if (__bva__.debug) {
                  console.log("Add to Cart"+" :"+JSON.stringify(product, null, " "));
                }
              }
            }
            // --------------------------------------------- get Json response
          });
        },1000);

        {% else %}

        dataLayer.push({
          'pageType' : 'Add to Cart',
          'event'    : 'Add to Cart',
          'ecommerce': {
            'add':{
              product
            }
          }
        });

        if (__bva__.debug) {
          console.log("Add to Cart"+" :"+JSON.stringify(product, null, " "));
        }

        {% endif %}

          // IF DYNAMIC CART IS TRUE
          if (__bva__.dynamicCart) {
            console.log("dynamic");
            // ---------------------------------- if dynamic cart is true
            var cartCheck = setInterval(function () {
            // -------------------------------------- begin check interval
            if ($(__bva__.cartVisableSelector).length > 0) {
              // ------------------------------------------------------------------ check visible selectors
              clearInterval(cartCheck);
              mapJSONcartData();
              // ------------------------------------------------------------------ check visible selectors
              $(__bva__.removeCartTrigger).on('click', function (event) {
              // ------------------------------------------------------------------- remove from cart
              var link = $(this).attr("href");
              jQuery.getJSON(link, function (response) {
                // --------------------------------------------- get Json response
                __bva__.removeCart = response;
                var removeFromCart = {
                  'products': __bva__.removeCart.items.map(function (line_item) {
                    return {
                      'id'       : line_item.id,
                      'sku'      : line_item.sku,
                      'variant'  : line_item.variant_id,
                      'name'     : line_item.title,
                      'price'    : (line_item.price/100),
                      'quantity' : line_item.quantity
                    }
                  }),
                  'pageType' : 'Remove from Cart',
                  'event'    : 'Remove from Cart'
                };
                dataLayer.push(removeFromCart);
                if (__bva__.debug) {
                  console.log("Cart"+" :"+JSON.stringify(removeFromCart, null, " "));
                }
                // --------------------------------------------- get Json response
              });
              // ------------------------------------------------------------------- remove from cart
            });
            }
            // -------------------------------------- begin check interval
          }, 500);
          // ---------------------------------- if dynamic cart is true
        }
      }

      $(document).on('click', __bva__.cartTriggers, function() {
        __bva__addtocart();
      });

      /* DATALAYER: Newsletter Subscription
      ------------------------------------- */
      __bva__newsletter_fire = 0;
      $(document).on('click', __bva__.newsletterSelectors, function () {
        if(__bva__newsletter_fire !== 1){
        __bva__newsletter_fire = 1;
        var newsletterCheck = setInterval(function () {
        // -------------------------------------- begin check interval
          if ($(__bva__.newsletterSuccess).length > 0) {
          // ------------------------------------------------------------------ check visible selectors
            clearInterval(newsletterCheck);
            dataLayer.push({'event': 'Newsletter Subscription'});
          // ------------------------------------------------------------------ check visible selectors
          }
        // -------------------------------------- begin check interval
        },500);
      }
      });

      /* DATALAYER: Wishlist
      ------------------------------------- */
      setTimeout( function(){

        $(__bva__.wishlistSelector).on('click', function () {
          dataLayer.push(product,
            {'event': 'Add to Wishlist'});
          if(__bva__.debug){
            console.log("Wishlist"+" :"+JSON.stringify(product, null, " "));
          }
        });

        if(document.location.pathname == __bva__.wishlistPage){
          var __bva__productLinks = $('[href*="product"]');
          var __bva__prods        = [];
          var __bva__links        = [];
          var __bva__count        = 1;

          $(__bva__productLinks).each(function(){
            var href = $(this).attr("href");
            if(!__bva__links.includes(href)){
              __bva__links.push(href);
              $(this).attr("dataLayer-wishlist-item",__bva__count++);
              jQuery.getJSON(href, function (response) {
              // --------------------------------------------- get Json response
                __bva__.wishlist = response;
                var wishlistproducts = {
                'id'   : __bva__.wishlist.product.id,
                'name' : __bva__.wishlist.product.title,
                };
                __bva__prods.push(wishlistproducts);
              // --------------------------------------------- get Json response
              });
            }
          });

          dataLayer.push({'products': __bva__prods,
            'pageType' : 'Wishlist',
            'event'    : 'Wishlist'});
          }

        var __bva__count = 1;
        var wishlistDel  = $(__bva__.removeWishlist);
        wishlistDel.each(function(){
          $(this).attr("dataLayer-wishlist-item-del",__bva__count++);
        });

        $(__bva__.removeWishlist).on('click', function(){
          console.log('click')
          var index = $(this).attr("dataLayer-wishlist-item-del");
          var link  = $("[dataLayer-wishlist-item="+index+"]").attr("href");
          console.log(index)
          console.log(link)
          jQuery.getJSON(link, function (response) {
          // --------------------------------------------- get Json response
            __bva__.wishlist     = response;
            var wishlistproducts = {
              'id'   : __bva__.wishlist.product.id,
              'name' : __bva__.wishlist.product.title,
            };

            dataLayer.push({'products': wishlistproducts,
            'pageType' : 'Wishlist',
            'event'    : 'Wishlist Delete Product'});
          // --------------------------------------------- get Json response
          });
        })
      }, 3000);

      /* DATALAYER: CTAs
      ------------------ */
      $(__bva__.ctaSelectors).on('click', function () {
        var ctaCheck = setInterval(function () {
        // -------------------------------------- begin check interval
          if ($(__bva__.ctaSuccess).length > 0) {
          // ------------------------------------------------------------------ check visible selectors
            clearInterval(ctaCheck);
            dataLayer.push({'event': 'CTA'});
          // ------------------------------------------------------------------ check visible selectors
          }
        // -------------------------------------- begin check interval
        },500);
      });

      /* DATALAYER: Promo Subscriptions
      --------------------------------- */
      $(__bva__.promoSubscriptionsSelectors).on('click', function () {
        var ctaCheck = setInterval(function () {
        // -------------------------------------- begin check interval
          if ($(__bva__.promoSuccess).length > 0) {
          // ------------------------------------------------------------------ check visible selectors
            clearInterval(ctaCheck);
            dataLayer.push({'event': 'Promo Subscription'});
          // ------------------------------------------------------------------ check visible selectors
          }
        // -------------------------------------- begin check interval
        },500);
      });

    }); // document ready

  // --------------- run script after jQuery has loaded
  }
// --------------------------------------------- wait for jQuery to load
}, 500);
</script>
